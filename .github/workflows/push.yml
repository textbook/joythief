name: "CI"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "./.github/actions/poetry"
        with:
          save-cache: "true"
      - run: "poetry run black --check src/ tests/"
      - run: "poetry run isort --check src/ tests/"
      - run: "poetry run mypy src/ tests/"

  test:
    runs-on: "ubuntu-latest"
    needs:
      - "lint"
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "./.github/actions/poetry"
        with:
          python-version: "${{ matrix.python-version }}"
      - run: "poetry run coverage run -m pytest"
      - run: "poetry run coverage report"

  build:
    runs-on: "ubuntu-latest"
    needs:
      - "test"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "./.github/actions/poetry"
      - run: "poetry build"
      - uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          path: "dist/*"
          name: "dist"

  docs:
    runs-on: "ubuntu-latest"
    needs:
      - "test"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "./.github/actions/poetry"
        with:
          extra-groups: "docs"
      - run: "poetry run sphinx-build --builder html docs/source/ docs/build/"
      - uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "docs"
          path: "docs/build/**"
